#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbr d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
# Par regression lineaire
reg<-lm(Freq~t)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par régression linéaire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbr d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
library(zoo)
library(xts)
library(mgcv)
library(zoo)
library(xts)
library(mgcv)
rm (list=objects())
setwd("~/GitHub/ProjetR")
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere(1).csv", header = T, sep = ";")
library(readr)
accidents_corporels_de_la_circulation_routiere_1_ <- read_csv("accidents-corporels-de-la-circulation-routiere (1).csv")
View(accidents_corporels_de_la_circulation_routiere_1_)
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere(1).csv", header = T, sep = ";")
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere_1_.csv", header = T, sep = ";")
setwd("~/GitHub/ProjetR")
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere_1_.csv", header = T, sep = ";")
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere(1).csv", header = T, sep = ";")
#lecture du fichier
dataCirculation <- read.csv("2016.csv", header = T, sep = ";")
summary(dataCirculation)
names(dataCirculation)
length(dataCirculation$DATE)
#suppression des colonnes inutiles
dataCirculation <- data.frame (dataCirculation$DATE, dataCirculation$HEURE)
names(dataCirculation)<-c( "date", "heure")
summary(dataCirculation)
head(dataCirculation)
tail(dataCirculation)
str(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$date, "%Y-%m-%d"))
head(Date)
dataCirculation <- as.data.frame(table(Date))
head(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$Date, "%Y-%m-%d"))
Freq = as.numeric(dataCirculation$Freq)
dataCirculation = data.frame(Date , Freq)
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015")
#statistiques de base
summary(dataCirculation$Freq)
mean(dataCirculation$Freq)
sd(dataCirculation$Freq)
dataCirculation$Date[which.max(Freq)]
dataCirculation$Date[which.min(Freq)]
boxplot(dataCirculation$Freq,ylab="Nombre d'accidents par jour")
hist(dataCirculation$Freq,main="Histogramme",xlab="Nombre d'accidents par jour",ylab="Frequence")
#Moyenne par an
annees <- as.factor (format(dataCirculation$Date, "%Y"))
moyenne_an <- tapply(dataCirculation$Freq,annees,mean)
# Moyenne par mois
mois <- as.factor(format(dataCirculation$Date,"%m"))
moyenne_mois <- tapply(dataCirculation$Freq,mois,mean)
plot(moyenne_mois,type='b',pch=20)
barplot(moyenne_mois,col="lightblue",main="Moyenne par mois",xlab="Mois",ylab="Nombre d'accidents par jour")
boxplot(dataCirculation$Freq ~ mois,col="lightblue",pch=20,cex=0.5,xlab="Mois",ylab="Nombre d'accidents par jour")
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
plot.xts (dataCirculation.xts)
jour<-as.factor(.indexwday(dataCirculation.xts))
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
# Moyenne par jour et mois
moyenne_jour_mois = tapply(dataCirculation$Freq,mois:jour,mean)
moyenne_jour_mois = matrix(moyenne_jour_mois,nrow=12,ncol=7,byrow=T)
matplot(t(moyenne_jour_mois),type='l',col=rainbow(12), main="Moyenne par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
# Par regression lineaire
reg<-lm(Freq~t)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par régression linéaire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbr d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
library(zoo)
library(xts)
library(mgcv)
rm (list=objects())
setwd("~/GitHub/ProjetR")
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere.csv", header = T, sep = ";")
summary(dataCirculation)
names(dataCirculation)
length(dataCirculation$DATE)
#suppression des colonnes inutiles
dataCirculation <- data.frame (dataCirculation$DATE, dataCirculation$HEURE)
names(dataCirculation)<-c( "date", "heure")
summary(dataCirculation)
head(dataCirculation)
tail(dataCirculation)
str(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$date, "%Y-%m-%d"))
head(Date)
Date = Date [which(format(Date,"%Y") == 2013 | format(Date, "%Y") == 2014 | format(Date,"%Y") == 2015)]
head(Date)
tail(Date)
dataCirculation <- as.data.frame(table(Date))
head(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$Date, "%Y-%m-%d"))
Freq = as.numeric(dataCirculation$Freq)
dataCirculation = data.frame(Date , Freq)
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015")
#statistiques de base
summary(dataCirculation$Freq)
mean(dataCirculation$Freq)
sd(dataCirculation$Freq)
dataCirculation$Date[which.max(Freq)]
dataCirculation$Date[which.min(Freq)]
boxplot(dataCirculation$Freq,ylab="Nombre d'accidents par jour")
hist(dataCirculation$Freq,main="Histogramme",xlab="Nombre d'accidents par jour",ylab="Frequence")
#Moyenne par an
annees <- as.factor (format(dataCirculation$Date, "%Y"))
moyenne_an <- tapply(dataCirculation$Freq,annees,mean)
# Moyenne par mois
mois <- as.factor(format(dataCirculation$Date,"%m"))
moyenne_mois <- tapply(dataCirculation$Freq,mois,mean)
plot(moyenne_mois,type='b',pch=20)
barplot(moyenne_mois,col="lightblue",main="Moyenne par mois",xlab="Mois",ylab="Nombre d'accidents par jour")
boxplot(dataCirculation$Freq ~ mois,col="lightblue",pch=20,cex=0.5,xlab="Mois",ylab="Nombre d'accidents par jour")
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
plot.xts (dataCirculation.xts)
jour<-as.factor(.indexwday(dataCirculation.xts))
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
# Moyenne par jour et mois
moyenne_jour_mois = tapply(dataCirculation$Freq,mois:jour,mean)
moyenne_jour_mois = matrix(moyenne_jour_mois,nrow=12,ncol=7,byrow=T)
matplot(t(moyenne_jour_mois),type='l',col=rainbow(12), main="Moyenne par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
# Par regression lineaire
reg<-lm(Freq~t)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par regression lineaire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
data.st<-Freq/tend # st pour "sans tendance"
mb<- filter(dataCirculation$Freq,filter=array(1/30,dim=30),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 30)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 30)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "black")
mb<- filter(dataCirculation$Freq,filter=array(1/30,dim=30),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 30)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "black")
data.st<-Freq/noyau # st pour "sans tendance"
data.st<-Freq/noyau$y # st pour "sans tendance"
par(mfrow=c(1,1))
plot(Date,data.st,type='l',main="Données sans la tendance",xlab="",ylab="Nmbr d'accidents")
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/30,dim=30), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/7,dim=7), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/20,dim=20), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/50,dim=50), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/5,dim=5), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/30,dim=30), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
data.st<-Freq-noyau$y # st pour "sans tendance"
par(mfrow=c(1,1))
plot(Date,data.st,type='l',main="Données sans la tendance",xlab="",ylab="Nmbr d'accidents")
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/30,dim=30), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
rm (list=objects())
setwd("~/GitHub/ProjetR")
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere.csv", header = T, sep = ";")
summary(dataCirculation)
names(dataCirculation)
length(dataCirculation$DATE)
#suppression des colonnes inutiles
dataCirculation <- data.frame (dataCirculation$DATE, dataCirculation$HEURE)
names(dataCirculation)<-c( "date", "heure")
summary(dataCirculation)
head(dataCirculation)
tail(dataCirculation)
str(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$date, "%Y-%m-%d"))
head(Date)
Date = Date [(format(Date, "%Y") == 2014 | format(Date,"%Y") == 2015)]
head(Date)
tail(Date)
dataCirculation <- as.data.frame(table(Date))
head(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$Date, "%Y-%m-%d"))
Freq = as.numeric(dataCirculation$Freq)
dataCirculation = data.frame(Date , Freq)
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015")
#statistiques de base
summary(dataCirculation$Freq)
mean(dataCirculation$Freq)
sd(dataCirculation$Freq)
dataCirculation$Date[which.max(Freq)]
dataCirculation$Date[which.min(Freq)]
boxplot(dataCirculation$Freq,ylab="Nombre d'accidents par jour")
#Moyenne par an
annees <- as.factor (format(dataCirculation$Date, "%Y"))
hist(dataCirculation$Freq,main="Histogramme",xlab="Nombre d'accidents par jour",ylab="Frequence")
moyenne_an <- tapply(dataCirculation$Freq,annees,mean)
# Moyenne par mois
mois <- as.factor(format(dataCirculation$Date,"%m"))
moyenne_mois <- tapply(dataCirculation$Freq,mois,mean)
plot(moyenne_mois,type='b',pch=20)
barplot(moyenne_mois,col="lightblue",main="Moyenne par mois",xlab="Mois",ylab="Nombre d'accidents par jour")
boxplot(dataCirculation$Freq ~ mois,col="lightblue",pch=20,cex=0.5,xlab="Mois",ylab="Nombre d'accidents par jour")
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
plot.xts (dataCirculation.xts)
jour<-as.factor(.indexwday(dataCirculation.xts))
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
moyenne_jour_mois = matrix(moyenne_jour_mois,nrow=12,ncol=7,byrow=T)
matplot(t(moyenne_jour_mois),type='l',col=rainbow(12), main="Moyenne par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
####### Estimation de la tendance ##########
n<- length(Date)
# Moyenne par jour et mois
moyenne_jour_mois = tapply(dataCirculation$Freq,mois:jour,mean)
par(mfrow=c(1,1))
t<-c(1:n)
# Par regression lineaire
reg<-lm(Freq~t)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par regression lineaire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
mb<- filter(dataCirculation$Freq,filter=array(1/30,dim=30),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 30)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "black")
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
data.st<-Freq-noyau$y # st pour "sans tendance"
par(mfrow=c(1,1))
plot(Date,data.st,type='l',main="Données sans la tendance",xlab="",ylab="Nmbr d'accidents")
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/30,dim=30), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere.csv", header = T, sep = ";")
summary(dataCirculation)
names(dataCirculation)
length(dataCirculation$DATE)
#suppression des colonnes inutiles
dataCirculation <- data.frame (dataCirculation$DATE, dataCirculation$HEURE)
names(dataCirculation)<-c( "date", "heure")
summary(dataCirculation)
head(dataCirculation)
tail(dataCirculation)
str(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$date, "%Y-%m-%d"))
head(Date)
Date = Date [which(format(Date,"%Y") == 2013 | format(Date, "%Y") == 2014 | format(Date,"%Y") == 2015)]
head(Date)
tail(Date)
dataCirculation <- as.data.frame(table(Date))
head(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$Date, "%Y-%m-%d"))
Freq = as.numeric(dataCirculation$Freq)
dataCirculation = data.frame(Date , Freq)
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015")
#statistiques de base
summary(dataCirculation$Freq)
mean(dataCirculation$Freq)
sd(dataCirculation$Freq)
dataCirculation$Date[which.max(Freq)]
dataCirculation$Date[which.min(Freq)]
boxplot(dataCirculation$Freq,ylab="Nombre d'accidents par jour")
#Moyenne par an
annees <- as.factor (format(dataCirculation$Date, "%Y"))
moyenne_an <- tapply(dataCirculation$Freq,annees,mean)
hist(dataCirculation$Freq,main="Histogramme",xlab="Nombre d'accidents par jour",ylab="Frequence")
# Moyenne par mois
mois <- as.factor(format(dataCirculation$Date,"%m"))
moyenne_mois <- tapply(dataCirculation$Freq,mois,mean)
plot(moyenne_mois,type='b',pch=20)
barplot(moyenne_mois,col="lightblue",main="Moyenne par mois",xlab="Mois",ylab="Nombre d'accidents par jour")
boxplot(dataCirculation$Freq ~ mois,col="lightblue",pch=20,cex=0.5,xlab="Mois",ylab="Nombre d'accidents par jour")
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
plot.xts (dataCirculation.xts)
jour<-as.factor(.indexwday(dataCirculation.xts))
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
# Moyenne par jour et mois
moyenne_jour_mois = tapply(dataCirculation$Freq,mois:jour,mean)
matplot(t(moyenne_jour_mois),type='l',col=rainbow(12), main="Moyenne par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
####### Estimation de la tendance ##########
n<- length(Date)
moyenne_jour_mois = matrix(moyenne_jour_mois,nrow=12,ncol=7,byrow=T)
t<-c(1:n)
par(mfrow=c(1,1))
# Par regression lineaire
reg<-lm(Freq~t)
plot(Date,Freq,type='l',
main="Par regression lineaire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
tend.lm <- reg$fitted
mb<- filter(dataCirculation$Freq,filter=array(1/30,dim=30),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 30)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "black")
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
data.st<-Freqnoyau$y # st pour "sans tendance"
par(mfrow=c(1,1))
plot(Date,data.st,type='l',main="Données sans la tendance",xlab="",ylab="Nmbr d'accidents")
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/30,dim=30), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')
# Par moyenne mobile
saison.mb<-filter(data.st, filter=array(1/30,dim=30), method = c("convolution"),
sides = 2, circular = T)
saison.mb<-xts(saison.mb,order.by=Date)
plot(Date,data.st,type='l',
main="Par moyenne mobile",
xlab="",ylab="Nombre de tapages")
lines(Date,saison.mb,col='red')

#suppression des colonnes inutiles
dataCirculation <- data.frame (dataCirculation$DATE, dataCirculation$HEURE)
View(dataCirculation)
View(dataCirculation)
names(dataCirculation)<-c( "date", "heure")
summary(dataCirculation)
head(dataCirculation)
tail(dataCirculation)
str(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$date, "%Y-%m-%d"))
head(Date)
dataCirculation <- as.data.frame(table(Date))
head(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$Date, "%Y-%m-%d"))
Freq = as.numeric(dataCirculation$Freq)
dataCirculation = data.frame(Date , Freq)
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015")
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015")
#statistiques de base
summary(dataCirculation$Freq)
mean(dataCirculation$Freq)
sd(dataCirculation$Freq)
dataCirculation$Date[which.max(Freq)]
dataCirculation$Date[which.min(Freq)]
boxplot(dataCirculation$Freq,ylab="Nombre d'accidents par jour")
hist(dataCirculation$Freq,main="Histogramme",xlab="Nombre d'accidents par jour",ylab="Frequence")
#Moyenne par an
annees <- as.factor (format(dataCirculation$Date, "%Y"))
moyenne_an <- tapply(dataCirculation$Freq,annees,mean)
plot(moyenne_an,type='b',pch=20)
# Moyenne par mois
mois <- as.factor(format(dataCirculation$Date,"%m"))
moyenne_mois <- tapply(dataCirculation$Freq,mois,mean)
plot(moyenne_mois,type='b',pch=20)
barplot(moyenne_mois,col="lightblue",main="Moyenne par mois",xlab="Mois",ylab="Nombre d'accidents par jour")
boxplot(dataCirculation$Freq ~ mois,col="lightblue",pch=20,cex=0.5,xlab="Mois",ylab="Nombre d'accidents par jour")
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
plot.xts (dataCirculation.xts)
jour<-as.factor(.indexwday(dataCirculation.xts))
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
# Moyenne par jour et mois
moyenne_jour_mois = tapply(dataCirculation$Freq,mois:jour,mean)
moyenne_jour_mois = matrix(moyenne_jour_mois,nrow=12,ncol=7,byrow=T)
matplot(t(moyenne_jour_mois),type='l',col=rainbow(12), main="Moyenne par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1:1))
par(mfrow=c(1,1))
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
# Par r?gression lin?aire
reg<-lm(dataCirculation~t)
# Par r?gression lin?aire
reg<-lm(Freq~t)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par r?gression lin?aire",
xlab="",ylab="Nombre d'e tapages'accdents")
lines(Date,tend.lm,col='red')
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l', xaxt = "n",xlab="",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015", col = "royalblue3")
axis.POSIXct(1, at = seq(dataCirculation$Date[1], tail(dataCirculation$Date, 1), "months"), format = "%d/%m/%y", las = 2 )
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l', xaxt = "n",xlab="",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015", col = "royalblue3")
axis.POSIXct(1, at = seq(dataCirculation$Date[1], tail(dataCirculation$Date, 1), "years"), format = "%d/%m/%y", las = 2 )
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015", col = "royalblue3")
axis.POSIXct(1, at = seq(dataCirculation$Date[1], tail(dataCirculation$Date, 1), "years"), format = "%d/%m/%y", las = 2 )
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015", col = "royalblue3")
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015", col = "royalblue3")
#Moyenne par an
annees <- as.factor (format(dataCirculation$Date, "%Y"))
moyenne_an <- tapply(dataCirculation$Freq,annees,mean)
plot(moyenne_an,type='b',pch=20)
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
library(zoo)
library(xts)
library(mgcv)
library(zoo)
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
plot.xts (dataCirculation.xts)
jour<-as.factor(.indexwday(dataCirculation.xts))
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
# Moyenne par jour et mois
moyenne_jour_mois = tapply(dataCirculation$Freq,mois:jour,mean)
moyenne_jour_mois = matrix(moyenne_jour_mois,nrow=12,ncol=7,byrow=T)
matplot(t(moyenne_jour_mois),type='l',col=rainbow(12), main="Moyenne par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
library(dygraphs)
View(moyenne_jour_mois)
moyenne_jour_mois_an = tapply(dataCirculation$Freq,annees:mois:jour,mean)
moyenne_jour_mois_an = matrix(moyenne_jour_mois_an,nrow=12*11,ncol=7,byrow=T)
matplot(t(moyenne_jour_mois_an),type='l',col=rainbow(12*11), main="Moyenne par an par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
View(moyenne_jour_mois_an)
moyenne_jour_an = tapply(dataCirculation$Freq,annees:jour,mean)
moyenne_jour_an = matrix(moyenne_jour_mois_an,nrow=11,ncol=7,byrow=T)
matplot(t(moyenne_jour_an),type='l',col=rainbow(11), main="Moyenne par an par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
View(moyenne_jour_an)
View(moyenne_jour_mois)
View(moyenne_jour_an)
rm(moyenne_jour_an)
rm(moyenne_jour_mois_an)
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
# Par regression lineaire
reg<-lm(Freq~t)
tend.lm <- reg$fitted
plot(Date,Freq,type='l', main="Par rÃ©gression linÃ©aire", xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular='T')
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
mean(dataCirculation$Freq)
sd(dataCirculation$Freq)
par(mfrow = c(1,2))
I(Date)
str(I(Date))
?I
=ar
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/10,dim=10),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/200,dim=200),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/200,dim=200),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/300,dim=300),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular="T")
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=F)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
####### Estimation de la tendance ##########
n<- length(Date)
t<-c(1:n)
par(mfrow=c(1,1))
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=F)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/10,dim=10),method=c('convolution'),sides=2,circular=F)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=F)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
View(mb)
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=T)
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=T)
plot(dataCirculation,type='l')
lines(mb,col='red')
mb
mb<- xts(mb[[2]],order.by=Date)
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb[[2]],order.by=Date)
mb<- xts(mb[,2],order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb[,2],order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
mb
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=F)
mb<- xts(mb[,2],order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=F)
mb<- xts(mb[,2],order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
mb<- xts(mb[,1],order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
#Par moyenne mobile
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=F)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular='T')
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
rm (list=objects())
setwd("~/GitHub/ProjetR")
#lecture du fichier
dataCirculation <- read.csv("accidents-corporels-de-la-circulation-routiere.csv", header = T, sep = ";")
summary(dataCirculation)
names(dataCirculation)
length(dataCirculation$DATE)
#suppression des colonnes inutiles
dataCirculation <- data.frame (dataCirculation$DATE, dataCirculation$HEURE)
names(dataCirculation)<-c( "date", "heure")
summary(dataCirculation)
head(dataCirculation)
tail(dataCirculation)
str(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$date, "%Y-%m-%d"))
head(Date)
dataCirculation <- as.data.frame(table(Date))
head(dataCirculation)
Date = as.POSIXct(strptime(dataCirculation$Date, "%Y-%m-%d"))
Freq = as.numeric(dataCirculation$Freq)
dataCirculation = data.frame(Date , Freq)
# Affichage
plot(dataCirculation$Date,dataCirculation$Freq,type='l',xlab="Date",ylab="Nombre d'accident",main="Nombre d'accidents par jour de 2008 a 2015")
#statistiques de base
summary(dataCirculation$Freq)
mean(dataCirculation$Freq)
sd(dataCirculation$Freq)
dataCirculation$Date[which.max(Freq)]
dataCirculation$Date[which.min(Freq)]
boxplot(dataCirculation$Freq,ylab="Nombre d'accidents par jour")
hist(dataCirculation$Freq,main="Histogramme",xlab="Nombre d'accidents par jour",ylab="Frequence")
#Moyenne par an
annees <- as.factor (format(dataCirculation$Date, "%Y"))
moyenne_an <- tapply(dataCirculation$Freq,annees,mean)
# Moyenne par mois
mois <- as.factor(format(dataCirculation$Date,"%m"))
moyenne_mois <- tapply(dataCirculation$Freq,mois,mean)
plot(moyenne_mois,type='b',pch=20)
barplot(moyenne_mois,col="lightblue",main="Moyenne par mois",xlab="Mois",ylab="Nombre d'accidents par jour")
boxplot(dataCirculation$Freq ~ mois,col="lightblue",pch=20,cex=0.5,xlab="Mois",ylab="Nombre d'accidents par jour")
# Moyenne par jour (de la semaine)
dataCirculation.xts<-xts(dataCirculation$Freq,order.by = Date)
plot.xts (dataCirculation.xts)
jour<-as.factor(.indexwday(dataCirculation.xts))
moyenne_jour<-tapply(dataCirculation.xts,jour,mean)
barplot(moyenne_jour,names.arg=c("Lun","Mar","Mer","Jeu","Ven","Sam","Dim"),main="Moyenne par jour de la semaine",xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
# Moyenne par jour et mois
moyenne_jour_mois = tapply(dataCirculation$Freq,mois:jour,mean)
moyenne_jour_mois = matrix(moyenne_jour_mois,nrow=12,ncol=7,byrow=T)
matplot(t(moyenne_jour_mois),type='l',col=rainbow(12), main="Moyenne par mois et par jour", xlab="Jour de la semaine",ylab="Nombre d'accidents par jour")
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular='T')
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
View(moyenne_jour_mois)
View(mb)
View(mb)
rm(mb)
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular='T')
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,col='red')
lines(mb,col='red')
ablines()
abline()
lines()
rm(lines())
rm(lines(mb))
rm(mb)
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular='T')
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,"blue")
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular='T')
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(mb,"blue")
lines(Date,mb,"blue")
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular='T')
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date,mb,"blue")
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date,mb,"blue")
lines(Date,mb,col = "blue")
lines(mb,col = "blue")
lines(mb,col = 'blue')
lines(Date,mb,col = 'blue')
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date,mb,col = 'blue')
mb<- xts(mb[,2],order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb)
lines(Date, mb, col = 'blue')
mb<- filter(dataCirculation,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- filter(dataCirculation,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb[,2],order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'blue')
mb<- filter(dataCirculation$Freq,filter=array(1/1000,dim=1000),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
source('~/GitHub/ProjetR/scriptProjet.R', echo=TRUE)
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
mb<- filter(dataCirculation$Freq,filter=array(1/50,dim=50),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
mb<- filter(dataCirculation$Freq,filter=array(1,dim=1),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
mb<- filter(dataCirculation$Freq,filter=array(200,dim=200),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
mb<- filter(dataCirculation$Freq,filter=array(200,dim=200),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
mb<- filter(dataCirculation$Freq,filter=array(1/200,dim=200),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
# Par regression lineaire
reg<-lm(Freq~t + t^2)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par rÃ©gression linÃ©aire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
# Par regression lineaire
reg<-lm(Freq~t + t^2 + t^3, data = dataCirculation)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par rÃ©gression linÃ©aire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
# Par regression lineaire
reg<-lm(Freq~t, data = dataCirculation)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par rÃ©gression linÃ©aire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
# Par regression lineaire
reg<-lm(Freq~t + I(t^2), data = dataCirculation)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par rÃ©gression linÃ©aire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
# Par regression lineaire
reg<-lm(Freq~t + I(t^2) + I(t^3), data = dataCirculation)
tend.lm <- reg$fitted
plot(Date,Freq,type='l',
main="Par rÃ©gression linÃ©aire",
xlab="",ylab="Nombre d'accidents")
lines(Date,tend.lm,col='red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 10)
par = (mfrow(c(1, 2)))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orandered2")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow(c(1, 2)))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
par = (mfrow(c(1, 2)))
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 1))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
?par
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(2, 1))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
par(mfrow=c(1,1))
mb<- filter(dataCirculation$Freq,filter=array(1/100,dim=100),method=c('convolution'),sides=2,circular=T)
mb<- xts(mb,order.by=Date)
plot(dataCirculation,type='l')
lines(Date, mb, col = 'red')
#Par noyaux
noyau <-ksmooth(t, dataCirculation$Freq , kernel = c("normal"),bandwidth = 100)
par = (mfrow=c(1, 2))
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue")
lines(dataCirculation$Date, noyau$y, type = "l", xlab = "", ylab = "tendance", col = "orangered2")
#Par polynomes locaux
lo <- loess (freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, tye = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$date, lo$fitted, col = "orangered2", lwd = 2)
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$date, lo$fitted, col = "orangered2", lwd = 2)
#Par polynomes locaux
lo <- loess (Freq ~ t, data = dataCirculation, degree = 2, span = 0.7)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab = "nbr d'accidents", col = "blue")
lines (dataCirculation$Date, lo$fitted, col = "orangered2", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
g <-gam(Freq ~ s(t, k = 3), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
g <-gam(Freq ~ s(t, k = 20), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
g <-gam(Freq ~ s(t, k = 100), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
g <-gam(Freq ~ s(t, k = 10), data = dataCirculation)
plot(dataCirculation$Date, dataCirculation$Freq, type = "l", xlab = "", ylab ="nbe d'accidents", col = "blue", lwd = 2)
lines (dataCirculation$Date, g$fitted, col = "red", lwd = 2)
